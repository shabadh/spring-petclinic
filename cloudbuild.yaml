options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _PROJECT_ID: assessment-shabadh
  _REGION_UK: europe-west2 
  _REGION_EU: europe-west4
  _CLUSTER_UK: petclinic-dev-uk
  _CLUSTER_EU: petclinic-dev-eu
  _REPO_NAME: gorilla_clinic
  _IMAGE_NAME: petclinic

steps:

# Version Dynamic
- name: 'gcr.io/cloud-builders/docker'
  id: generate-version
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      VERSION="v1-$(date +%Y%m%d%H%M%S)"
      echo "VERSION=$VERSION" >> version.env
      echo "Generated version: $VERSION"

# Build Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:${COMMIT_SHA}', '.']
  id: build-image

# Push image with COMMIT_SHA
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:${COMMIT_SHA}']
  id: push-image
  
# Tag image as latest
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:${VERSION}', 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:latest']
  id: tag-latest

# Push latest tag to registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:latest']
  id: push-latest

# Tag image with version
- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:${COMMIT_SHA}', 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:${_VERSION}']
  id: tag-version

# Push version tag
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:${_VERSION}']
  id: push-version

# Get credentials for gke-eu
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['container', 'clusters', 'get-credentials', '${_CLUSTER_EU}', '--region=${_REGION_EU}', '--project=${_PROJECT_ID}']
  id: get-credentials-eu

# Deploy to gke-eu
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernetes/namespace.yaml', '-f', 'kubernetes/serviceaccount.yaml', '-f', 'kubernetes/secret.yaml', '-f', 'kubernetes/deployment.yaml', '-f', 'kubernetes/services.yaml', '-f', 'kubernetes/serviceexport.yaml']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=${_REGION_EU}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_EU}'
  id: deploy-eu

# Update image in gke-eu
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['set', 'image', 'deployment/petclinic', 'petclinic=gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:${COMMIT_SHA}', '--record']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=${_REGION_EU}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_EU}'
  id: update-image-eu

# Get credentials for gke-uk
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['container', 'clusters', 'get-credentials', '${_CLUSTER_UK}', '--region=${_REGION_UK}', '--project=${_PROJECT_ID}']
  id: get-credentials-uk

# Deploy to gke-uk
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernetes/namespace.yaml', '-f', 'kubernetes/serviceaccount.yaml', '-f', 'kubernetes/secret.yaml', '-f', 'kubernetes/deployment.yaml', '-f', 'kubernetes/services.yaml', '-f', 'kubernetes/serviceexport.yaml']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=${_REGION_UK}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_UK}'
  id: deploy-uk

# Update image in gke-uk
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['set', 'image', 'deployment/petclinic', 'petclinic=gcr.io/${_PROJECT_ID}/${_IMAGE_NAME}:${COMMIT_SHA}', '--record']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=${_REGION_UK}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_UK}'
  id: update-image-uk

# Deploy Gateway and HTTPRoute (config cluster only)
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'kubernetes/gateway.yaml', '-f', 'kubernetes/route.yaml']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=${_REGION_EU}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_EU}'
  id: deploy-gateway